name: Wails build - all platforms

on:
  push:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build: [
          {name: nostr-wallet-connect, platform: linux/amd64, os: ubuntu-20.04},
          {name: nostr-wallet-connect, platform: windows/amd64, os: windows-2019},
          {name: nostr-wallet-connect, platform: darwin/universal, os: macos-12}
        ]
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      #- uses: dAppServer/wails-build-action@v2.2
      #  with:
      #    build-name: ${{ matrix.build.name }}
      #    build-platform: ${{ matrix.build.platform }}
      #    package: true
      #    go-version: '1.21'
      #    wails-version: 'v2.7.1'
      #    nsis: false
      #    node-version: '20.x'

      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf

      - name: Setup GoLang
        uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version: 1.21

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.7.1
        shell: bash

      - name: Install Linux Wails deps
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libgtk-3-0 libwebkit2gtk-4.0-dev gcc-aarch64-linux-gnu
        shell: bash

      - name: Install macOS Wails deps
        if: runner.os == 'macOS'
        run: brew install mitchellh/gon/gon
        shell: bash

      - name: Wails Doctor
        working-directory: .
        run: wails doctor
        shell: bash

      # On Windows, we need the shared libraries to be found in the same directory
      # as the executable. Wails build will fail otherwise.
      - name: Copy shared libraries
        if: runner.os == 'Windows'
        run: |
          cp `go list -m -f "{{.Dir}}" github.com/breez/breez-sdk-go`/breez_sdk/lib/windows-amd64/breez_sdk_bindings.dll ./
          cp `go list -m -f "{{.Dir}}" github.com/getAlby/glalby-go`/glalby/x86_64-pc-windows-gnu/glalby_bindings.dll ./
          cp `go list -m -f "{{.Dir}}" github.com/getAlby/ldk-node-go`/ldk_node/x86_64-pc-windows-gnu/ldk_node.dll ./
        shell: bash


      - name: Build App
        if: runner.os == 'macOS'
        run: wails build --platform darwin/universal -webview2 download -o ${{ matrix.build.name }} -tags "wails"
        shell: bash

      - name: Build App
        if: runner.os == 'Linux'
        run: wails build --platform linux/amd64 -webview2 download -o ${{ matrix.build.name }} -tags "wails"
        shell: bash

      - name: Build Windows App
        if: runner.os == 'Windows'
        run: wails build --platform windows/amd64 -webview2 download -o ${{ matrix.build.name }}.exe -tags "wails"
        shell: bash

      - name: Copy DLLs to the output directory
        if: runner.os == 'Windows'
        run: |
          cp breez_sdk_bindings.dll ./build/bin/
          cp glalby_bindings.dll ./build/bin/
          cp ldk_node.dll ./build/bin/
        shell: bash

      - name: Copy shared libraries to the output directory
        if: runner.os == 'Linux'
        run: |
          mkdir -p ./build/bin/lib
          cp `go list -m -f "{{.Dir}}" github.com/breez/breez-sdk-go`/breez_sdk/lib/linux-amd64/libbreez_sdk_bindings.so ./build/bin/lib/
          cp `go list -m -f "{{.Dir}}" github.com/getAlby/glalby-go`/glalby/x86_64-unknown-linux-gnu/libglalby_bindings.so ./build/bin/lib/
          cp `go list -m -f "{{.Dir}}" github.com/getAlby/ldk-node-go`/ldk_node/x86_64-unknown-linux-gnu/libldk_node.so ./build/bin/lib/
        shell: bash

      - name: Patch executable RPATH
        if: runner.os == 'Linux'
        run: |
          patchelf --force-rpath --set-rpath '$ORIGIN/lib' ./build/bin/nostr-wallet-connect

      - name: Add macOS perms
        if: runner.os == 'macOS'
        run: chmod +x build/bin/*/Contents/MacOS/*
        shell: bash

      - name: Add Linux perms
        if: runner.os  == 'Linux'
        run: chmod +x build/bin/*
        shell: bash

      - name: Build .app zip file
        if: runner.os == 'macOS'
        shell: bash
        run: |
          ditto -c -k ./build/bin/${{ matrix.build.name }}.app ./build/bin/${{ matrix.build.name }}.app.zip


      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{runner.os}} ${{ matrix.build.name }}
          path: |
            */bin/
            *\bin\*
